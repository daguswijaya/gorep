{
  "name": "Gorep",
  "tagline": "Simple tools to replace imported package name in golang project",
  "body": "<img src=\"https://cloud.githubusercontent.com/assets/982868/18839228/6d1bddbc-8434-11e6-8822-661adc484f04.png\" alt=\"Gorep - Simple tools to replace imported package name in golang project\" align=\"right\">\r\n\r\n# gorep\r\n\r\nSimple tools to replace imported package name in golang project. Useful to manage a project which deployed into multiple application on one server.\r\n\r\nPlease continue reading, you'll understand what is the purpose of this library\r\n\r\n## Story\r\n\r\nThis package is only useful when:\r\n\r\n 1. You are not using [golang vendor](https://blog.gopheracademy.com/advent-2015/vendor-folder/)\r\n 2. Your project is deployed as multiple app in one server\r\n\r\nSay that you have a project which the package path is `github.com/novalagung/project`. This project deployed to server as 3 different environment (one for *testing*, one for *dev*, one for *production*).\r\n\r\n```bash\r\n+ $GOPATH\r\n   + src\r\n      + github.com\r\n         + novalagung\r\n            + project\r\n                - main.go\r\n                - file_a.go\r\n                - file_b.go\r\n                - file_c.go\r\n                - ... other files, tons\r\n            + project-dev\r\n            + project-test\r\n   + bin\r\n   + pkg\r\n```\r\n\r\nWhen you want to build the `project-dev` and `project-test`, you have to change imported package names in all files inside each folder.\r\n\r\n```go\r\nimport \"github.com/novalagung/project/model\"\r\nimport \"github.com/novalagung/project/controller\"\r\nimport \"github.com/novalagung/project/conf\"\r\nimport \"github.com/novalagung/project/view\"\r\n// ... and so oon, in all files\r\n```\r\n\r\nneed to be replaced into this for the `project-dev`, as well as `project-test`\r\n\r\n```go\r\nimport \"github.com/novalagung/project-dev/model\"\r\nimport \"github.com/novalagung/project-dev/controller\"\r\nimport \"github.com/novalagung/project-dev/conf\"\r\nimport \"github.com/novalagung/project-dev/view\"\r\n```\r\n\r\nIt'll waste your time so much, espesially if there are tons of file inside. TONS!. This simple library could be your life-saver.\r\n\r\n## Installation\r\n\r\n```\r\ngo get github.com/novalagung/gorep\r\n```\r\n\r\nMake sure `$GOPATH/bin` is added to your `$PATH` variable.\r\n\r\n## Usage\r\n\r\nGo to your project folder, then run this\r\n\r\n```bash\r\ncd $GOPATH/src/github.com/novalagung/project-dev\r\ngorep -from=\"github.com/novalagung/project\" -to=\"github.com/novalagung/project-dev\"\r\n\r\n# or gorep path=\".\" -from=\"github.com/novalagung/project\" -to=\"github.com/novalagung/project-dev\"\r\n```\r\n\r\nOr use flag `-path` to specify the project location\r\n\r\n```bash\r\ngorep -path=\"/User/novalagung/goapp/src/github.com/novalagung/project-dev\" -from=\"github.com/novalagung/project\" -to=\"github.com/novalagung/project-dev\"\r\n```\r\n\r\nAll files which contains `github.com/novalagung/project` inside those choosen folder will be replaced with `github.com/novalagung/project-dev`.\r\n\r\n - Flag `-from` filled with package name you want to replace\r\n - Flag `-to` is the new name\r\n - Flag `-from` (optional) is the project path you want to hack. By default it'll be current active directory \r\n\r\n## Author\r\n\r\nNoval Agung Prayogo\r\n\r\n## License\r\n\r\nMIT\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}